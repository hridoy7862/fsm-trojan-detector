// testbench.v
`timescale 1ns/1ps
module testbench;

    reg clk;
    reg rst;
    reg mem_valid;
    wire alert_detected;

    // Instantiate the FSM
    trojan_detector uut (
        .clk(clk),
        .rst(rst),
        .mem_valid(mem_valid),
        .alert_detected(alert_detected)
    );

    // Clock generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk; // 10ns clock period
    end

    // Stimulus and waveform dumping
    initial begin
        $dumpfile("dump.vcd"); // create VCD file
        $dumpvars(0, testbench); // dump all variables

        rst = 1;
        mem_valid = 0;
        #20;
        rst = 0;

        // Normal behavior: mem_valid low
        #40;

        // Trojan attack: mem_valid high for several cycles
        mem_valid = 1;
        #60; // Keep high for 6 cycles (~60ns)

        // Back to normal
        mem_valid = 0;
        #100;

        $finish;
    end

endmodule
